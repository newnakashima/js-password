{"version":3,"sources":["js/util/nuckle.js","js/genpass.js"],"names":["n","range","max","min","step","Error","i","push","array_shuffle","input_array","length","r","Math","floor","random","tmp","CODE","ALPHA_START","ALPHA_END","CAP_ALPHA_START","CAP_ALPHA_END","Password","sign","num","cap","alpha_length","alpha_letters","create_alpha_letters","cap_letters","create_cap_letters","shuffled","concat","join","map","alpha_char","cap_char","start","end","code","String","fromCharCode","random_char","p","document","querySelector","innerText","gen"],"mappings":"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","file":"genpass.bfd6e9fb.map","sourceRoot":"..","sourcesContent":["var n = {\n    /**\n     * method\n     * @param {Number} max Max value of the range.\n     * @param {Number} min Min value of the range.\n     * @parma {Number} step Step value of the range.\n     * @return {Array<Number>} Number Array of range stepped by step.\n     */\n    range: function (max, min = 1, step = 1) {\n        if (max == min) {\n            return [max];\n        }\n\n        if (max < min) {\n            throw new Error('max must be larger than min');\n        }\n\n        let range = [];\n        for (let i = min; i <= max; i += step) {\n            range.push(i);\n        }\n        return range;\n    },\n    array_shuffle: function (input_array) {\n        for (let i = input_array.length - 1; i > 0; i--) {\n            let r = Math.floor(Math.random() * (i + 1));\n            let tmp = input_array[i];\n            input_array[i] = input_array[r];\n            input_array[r] = tmp;\n            return input_array;\n        }\n    }\n};\nexport default n;\n\n","import n from './util/nuckle';\n\nconst CODE = {\n    ALPHA_START: 97,\n    ALPHA_END: 122,\n    CAP_ALPHA_START: 65,\n    CAP_ALPHA_END: 90\n}\n\nclass Password {\n    constructor(min = 12, max = 16, sign = 1, num = 1, cap = 1) {\n        if (min > max) {\n            throw new Error('min は max 以下でなくてはいけません！');\n        }\n        this.min  = min;\n        this.max  = max;\n        this.sign = sign;\n        this.num  = num;\n        this.cap  = cap;\n\n        this.length = min;\n    }\n\n    gen() {\n        if (this.min != this.max) {\n            this.length = Math.floor(Math.random() * (this.max + 1 - this.min)) + this.min;\n        } \n        const alpha_length = this.length - (this.sign + this.num + this.cap);\n        const alpha_letters = this.create_alpha_letters(alpha_length);\n        const cap_letters = this.create_cap_letters(this.cap);\n        const shuffled = n.array_shuffle(alpha_letters.concat(cap_letters));\n        return shuffled.join('');\n    }\n\n    create_alpha_letters(length) {\n        return n.range(length).map(() => this.alpha_char());\n    }\n\n    create_cap_letters(length) {\n        return n.range(length).map(() => this.cap_char());\n    }\n\n    random_char(start, end) {\n        const code = Math.floor(Math.random() * (end + 1 - start)) + start;\n        return String.fromCharCode(code);\n    }\n\n    alpha_char() {\n        return this.random_char(CODE.ALPHA_START, CODE.ALPHA_END);\n    }\n\n    cap_char() {\n        return this.random_char(CODE.CAP_ALPHA_START, CODE.CAP_ALPHA_END);\n    }\n}\n\nlet p = new Password();\ndocument.querySelector('#gened-pass').innerText = p.gen();\n"]}